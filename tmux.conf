# tools needed :
# vlock urlview xclip

# screen command binding vim uses C-b
#set-option -g prefix C-a
#bind-key C-a last-window

# Reduce command delay
set -s escape-time 1

# reread tmux config
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# scroll xterm
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# history limit (defaut 2000)
set-option -g history-limit 100000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# session locking (in seconds)
set -g lock-after-time 3600

# for locking on linux (aptitude install | apt-get install vlock | yaourt -s vlock)
set -g lock-command vlock

# for managing urls
# aptitude install | apt-get install urlview | yaourt -s urlview

bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# mouse or not
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# activate mouse mode
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# unactivate mouse mode
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

# resize panes
bind-key -n C-S-Up resize-pane -U 15
bind-key -n C-S-Down resize-pane -D 15
bind-key -n C-S-Left resize-pane -L 25
bind-key -n C-S-Right resize-pane -R 25

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# copy mode
unbind [
bind Escape copy-mode

# vi mode
setw -g mode-keys vi

# Vim-style copy/paste
# unbind [
bind y copy-mode
#unbind p
bind p paste-buffer
bind P paste-buffer -d
bind - delete-buffer
bind = list-buffers
bind + choose-buffer
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

# navigation with ctrl-{h,j,k,l}
# https://gist.github.com/mislav/5189704

#bind -n C-k run-shell 'tmux-vim-select-pane -U'
#bind -n C-j run-shell 'tmux-vim-select-pane -D'
#bind -n C-h run-shell 'tmux-vim-select-pane -L'
#bind -n C-l run-shell 'tmux-vim-select-pane -R'
#bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# simplify managing windows
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v

# misc

set -g status-utf8 on
set-window-option -g utf8 on
setw -g utf8 on
setw -g xterm-keys on

## set the default TERM
set -g default-terminal screen-256color
#
### update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
### determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

#bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e urlview /tmp/tmux-buffer"
# move x clipboard into tmux paste buffer xclip needed !
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# # move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i"

# Highlight active window
set-window-option -g window-status-current-bg red

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on
#set -g visual-bell on
set -g bell-action any

#################
#   T H E M E   #
#################

#  man tmux (status-left)

# barre un peu plus discrete
set -g status-bg black
set -g status-fg white
setw -g window-status-current-bg black
setw -g window-status-current-fg green
#setw -g window-status-alert-attr black
#setw -g window-status-alert-fg yellow

set -g pane-active-border-fg white
set -g pane-active-border-bg white
set -g pane-border-fg white
set -g pane-border-bg white

set -g message-fg black
set -g message-bg green

# examples :
#set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'
#set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

#set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'
#set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

#set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=blue]%H:%M#[default]'

#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Utilisation de commandes shell
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-4 /proc/loadavg)#[default] #[fg=white,bold]%Y-%m-%d %H:%M:%S#[default]'
#

# colors
set -g status-bg black
set -g status-fg green 
 
# alignment
set-option -g status-justify centre
 
# spot at left
set-option -g status-left '#[bg=black,fg=green][#[fg=white] #S@#h #[fg=green]]'
set-option -g status-left-length 20
 
# window list
setw -g automatic-rename on
set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
set-window-option -g window-status-current-format '#[fg=white,bold]#I#[fg=blue]:#[fg=white]#W#[fg=dim]'
 
# spot at right
set -g status-right '#[fg=green][#[fg=white] %d-%m-%Y #[fg=green]]'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
