# tools needed :
# vlock urlview xclip tpm (https://github.com/tmux-plugins/tpm)

# screen command binding vim uses C-b
#set-option -g prefix C-a
#bind-key C-a last-window
bind C-b send-prefix

# set default shell
set-option -g default-shell $SHELL

# set default terminal
set -g default-terminal "screen-256color"

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'

# reduce command delay
set -s escape-time 0

# increase repeat time
set -sg repeat-time 600

# reread tmux config
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# edit configuration
bind-key e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# scroll xterm
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# history limit (defaut 2000)
set-option -g history-limit 100000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# session locking (in seconds)
set -g lock-after-time 3600

# for locking on linux (aptitude install | apt-get install vlock | yaourt -s vlock)
set -g lock-command physlock

# prompt for name of new window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# for managing urls
# aptitude install | apt-get install urlview | yaourt -s urlview

bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# activate mouse mode
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# unactivate mouse mode
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

# resize panes
bind-key -n C-S-Up resize-pane -U 15
bind-key -n C-S-Down resize-pane -D 15
bind-key -n C-S-Left resize-pane -L 25
bind-key -n C-S-Right resize-pane -R 25

# Resize panes using Vi-style key bindings.
bind-key -r C-k resize-pane -U
bind-key -r C-j resize-pane -D
bind-key -r C-h resize-pane -L
bind-key -r C-l resize-pane -R

bind-key -r C-M-k resize-pane -U 5
bind-key -r C-M-j resize-pane -D 5
bind-key -r C-M-h resize-pane -L 5
bind-key -r C-M-l resize-pane -R 5

# switch between sessions
bind -r ( switch-client -p
bind -r ) switch-client -n

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# renumber windows when a window is closed
set -g renumber-windows on

# set terminal window
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# 24 hour clock
setw -g clock-mode-style 24

# redraw status line every 10 seconds
set -g status-interval 10

# Allows for faster key repetition
set -s escape-time 0

bind-key z resize-pane -Z \; display-message "Zoom zoom zoom"

# copy mode
unbind [
bind Escape copy-mode

# vi mode
setw -g mode-keys vi

# Vim-style copy/paste
# unbind [
bind y copy-mode
#unbind p
bind p paste-buffer
bind P paste-buffer -d
bind - delete-buffer
bind = list-buffers
bind + choose-buffer
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi Escape send-keys -X cancel

#if-shell 'test "$(uname -s)" = "Darwin"' 'bind-key y run-shell "tmux show-buffer | pbcopy" \; display-message "Copied tmux buffer to system clipboard"'
#if-shell 'test "$(uname -s)" = "Linux"' 'bind-key y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"'

# navigation with ctrl-{h,j,k,l}
# https://gist.github.com/mislav/5189704

#bind -n C-k run-shell 'tmux-vim-select-pane -U'
#bind -n C-j run-shell 'tmux-vim-select-pane -D'
#bind -n C-h run-shell 'tmux-vim-select-pane -L'
#bind -n C-l run-shell 'tmux-vim-select-pane -R'
#bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# simplify managing windows
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v

# misc

# expect utf8
#set -g status-utf8 on
#setw -g utf8 on

#set-window-option -g utf8 on
#setw -g utf8 on

set -q -g status-utf8 on
setw -q -g utf8 on
setw -g xterm-keys on

# cal
bind-key T run-shell "cal $(date +%Y)"

### update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
### determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

#bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e urlview /tmp/tmux-buffer"
# move x clipboard into tmux paste buffer xclip needed !
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# # move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i"

# Highlight active window
set-window-option -g window-status-current-bg red

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on
#set -g visual-bell on
set -g bell-action any

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

# used for focusing (vim & some vim plugins)
set -g focus-events on

#################
#   T H E M E   #
#################

#  man tmux (status-left)

# powerline
# source /usr/lib/python3.4/site-packages/powerline/bindings/tmux/powerline.conf

# less shiny bar
set -g status-bg black
set -g status-fg green

setw -g window-status-current-bg black
setw -g window-status-current-fg green
#setw -g window-status-alert-attr black
#setw -g window-status-alert-fg yellow

set -g pane-active-border-fg white
set -g pane-active-border-bg white

set -g pane-border-fg white
set -g pane-border-bg white

set -g message-fg black
set -g message-bg green

# alignment
set-option -g status-justify centre

# spot at left
set-option -g status-left '#[bg=black,fg=green][#[fg=white] #S@#h #[fg=green]]'
set-option -g status-left-length 20

# window list
setw -g automatic-rename on
set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
set-window-option -g window-status-current-format '#[fg=white,bold]#I#[fg=blue]:#[fg=white]#W#[fg=dim]'

# spot at right
set -g status-right '#[fg=green][#[fg=white] %H:%M %d-%m-%Y #[fg=green]]'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'


# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# vim: set ts=8 sw=4 tw=0 ft=sh :
